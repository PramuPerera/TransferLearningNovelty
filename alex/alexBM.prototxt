

name: "AlexNet"




layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "/home/labuser/caffe/data/ilsvrc12/imagenet_mean.binaryproto"
  }
  image_data_param {
    source: "/home/labuser/caffe/data/ilsvrc12/train4.txt"
    batch_size: 32
    new_height: 256
    new_width: 256
  }

}




layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
 name : "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv1_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
 name : "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv2_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
 name : "conv3_w"
  }
  param {
 name : "conv3_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
 name : "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv4_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"

  param {
 name : "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv5_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
 name : "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
 name : "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}



##########





layer {
  name: "data_c"
  type: "ImageData"
  top: "data_c"
  top: "label_c"
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "/home/labuser/caffe/data/ilsvrc12/imagenet_mean.binaryproto"
  }
  image_data_param {
     source: "/home/labuser/caffe/examples/Triplet/data/train_val_b.txt"  batch_size: 32
    new_height: 256
    new_width: 256
  }

}




layer {
  name: "conv1_c"
  type: "Convolution"
  bottom: "data_c"
  top: "conv1_c"
  param {
 name : "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv1_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_c"
  type: "ReLU"
  bottom: "conv1_c"
  top: "conv1_c"
}
layer {
  name: "norm1_c"
  type: "LRN"
  bottom: "conv1_c"
  top: "norm1_c"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1_c"
  type: "Pooling"
  bottom: "norm1_c"
  top: "pool1_c"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_c"
  type: "Convolution"
  bottom: "pool1_c"
  top: "conv2_c"
  param {
 name : "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv2_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2_c"
  type: "ReLU"
  bottom: "conv2_c"
  top: "conv2_c"
}
layer {
  name: "norm2_c"
  type: "LRN"
  bottom: "conv2_c"
  top: "norm2_c"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2_c"
  type: "Pooling"
  bottom: "norm2_c"
  top: "pool2_c"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_c"
  type: "Convolution"
  bottom: "pool2_c"
  top: "conv3_c"
  param {
    lr_mult: 1
    decay_mult: 1
 name : "conv3_w"
  }
  param {
 name : "conv3_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_c"
  type: "ReLU"
  bottom: "conv3_c"
  top: "conv3_c"
}
layer {
  name: "conv4_c"
  type: "Convolution"
  bottom: "conv3_c"
  top: "conv4_c"
  param {
 name : "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv4_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4_c"
  type: "ReLU"
  bottom: "conv4_c"
  top: "conv4_c"
}
layer {
  name: "conv5_c"
  type: "Convolution"
  bottom: "conv4_c"
  top: "conv5_c"

  param {
 name : "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv5_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5_c"
  type: "ReLU"
  bottom: "conv5_c"
  top: "conv5_c"
}
layer {
  name: "pool5_c"
  type: "Pooling"
  bottom: "conv5_c"
  top: "pool5_c"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_c"
  type: "InnerProduct"
  bottom: "pool5_c"
  top: "fc6_c"
  param {
 name : "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6_c"
  type: "ReLU"
  bottom: "fc6_c"
  top: "fc6_c"
}
layer {
  name: "drop6_c"
  type: "Dropout"
  bottom: "fc6_c"
  top: "fc6_c"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_c"
  type: "InnerProduct"
  bottom: "fc6_c"
  top: "fc7_c"
  param {
 name : "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7_c"
  type: "ReLU"
  bottom: "fc7_c"
  top: "fc7_c"
}
layer {
  name: "drop7_c"
  type: "Dropout"
  bottom: "fc7_c"
  top: "fc7_c"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc9"
  type: "InnerProduct"
  bottom: "fc7_c"
  top: "fc9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracyc"
  type: "Accuracy"
  bottom: "fc9"
  bottom: "label_c"
  top: "accuracyc"
  include {
    phase: TEST
  }
}layer {
  name: "lossc"
  type: "SoftmaxWithLoss"
  bottom: "fc9"
  bottom: "label_c"
  top: "lossc"
}



layer {
  name: "encode1neuron"
  bottom: "fc9"
  top: "encode1neuron"
  type: "Sigmoid"
}


layer {
  name: "tripletloss"
  type: "Python"
  bottom: "encode1neuron"
  bottom: "label_c"
  top: "Eucloss"
  python_param {
    module: "APLoss"
    layer: "APLossLayer"
  }
 loss_weight: 0.5
}

layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "fc9"
  bottom: "label_c"
  top: "loss_cls"
  loss_weight: 1
}



