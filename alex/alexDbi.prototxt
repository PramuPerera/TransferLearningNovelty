name: "VGG_FACE_16_layers"


layer {
  name: "dataI"
  type: "ImageData"
  top: "dataI"
  top: "labels"
  include {
    phase: TRAIN
  }
  transform_param {
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123


  }
  image_data_param {
    source: "/home/labuser/caffe/data/ilsvrc12/INtrain4.txt"
    batch_size: 30
    new_height: 256
    new_width: 256
  }
}


layer {
  name: "dataI"
  type: "ImageData"
  top: "dataI"
  top: "labels"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123


  }
  image_data_param {
    source: "/home/labuser/caffe/data/ilsvrc12/INval4.txt"
    batch_size: 30
    new_height: 256
    new_width: 256
  }
}



layer {
  name: "datac"
  type: "ImageData"
  top: "datac"
  top: "labelsc"

  transform_param {
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123


  }
  image_data_param {
    source: "/home/labuser/caffe/examples/Triplet/data/train_val_d.txt"
    batch_size: 30
    new_height: 256
    new_width: 256
  }
}


layer {
  name: "concat"
  bottom: "labels"
  bottom: "labelsc"
  top: "lbl"
  type: "Concat"
  concat_param {
    axis: 0
  }
}

layer {
  name: "data_con"
  type: "Python"
  bottom: "dataI"
  bottom: "datac"
  top: "data"
  python_param {
    module: "dataconcat"
    layer: "DataConcatLayer"
  }
}





layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
 name : "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv1_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
 name : "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv2_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
 name : "conv3_w"
  }
  param {
 name : "conv3_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
 name : "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv4_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"

  param {
 name : "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "conv5_b"
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
 name : "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
 name : "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
 name : "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc9"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 60
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "accuracy_1"
  type:  "Accuracy"
  bottom: "fc9"
  bottom: "lbl"
  top: "accuracy"
  include: { phase: TEST }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "fc9"
  bottom: "lbl"
  top: "loss_cls"
  loss_weight: 1
}

